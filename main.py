import json
import os

FILENAME = "contacts.json"

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
def load_contacts():
    if not os.path.exists(FILENAME):
        return []
    try:
        with open(FILENAME, "r", encoding="utf-8") as file:
            return json.load(file)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: {e}")
        return []

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ —Ñ–∞–π–ª
def save_contacts(contacts):
    try:
        with open(FILENAME, "w", encoding="utf-8") as file:
            json.dump(contacts, file, ensure_ascii=False, indent=4)
        print("–ö–æ–Ω—Ç–∞–∫—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")

# –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
def show_all_contacts(contacts):
    if not contacts:
        print("–¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø—É—Å—Ç.")
        return
    for contact in contacts:
        print(
            f"[ID: {contact['id']}] {contact['name']} - {contact['phone']} ({contact['comment']})"
        )

# –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç
def create_contact(contacts):
    name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ").strip()
    phone = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ").strip()
    comment = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ").strip()

    if not name or not phone:
        print("–ò–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.")
        return

    new_id = max((c["id"] for c in contacts), default=0) + 1
    contacts.append({"id": new_id, "name": name, "phone": phone, "comment": comment})
    print("–ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.")

# –ù–∞–π—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç
def find_contact(contacts):
    query = input("–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤–æ–µ —Å–ª–æ–≤–æ (–∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π): ").lower().strip()
    results = [
        c for c in contacts
        if query in c["name"].lower() or
           query in c["phone"].lower() or
           query in c["comment"].lower()
    ]
    if results:
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(results)} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π:")
        show_all_contacts(results)
    else:
        print("–ö–æ–Ω—Ç–∞–∫—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

# –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç
def edit_contact(contacts):
    try:
        contact_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∫–æ–Ω—Ç–∞–∫—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: "))
        for contact in contacts:
            if contact["id"] == contact_id:
                print(f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞: {contact['name']}")
                contact["name"] = input(f"–ò–º—è [{contact['name']}]: ") or contact["name"]
                contact["phone"] = input(f"–¢–µ–ª–µ—Ñ–æ–Ω [{contact['phone']}]: ") or contact["phone"]
                contact["comment"] = input(f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π [{contact['comment']}]: ") or contact["comment"]
                print("–ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.")
                return
        print("–ö–æ–Ω—Ç–∞–∫—Ç —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except ValueError:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID.")

# –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç
def delete_contact(contacts):
    try:
        contact_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∫–æ–Ω—Ç–∞–∫—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: "))
        for i, contact in enumerate(contacts):
            if contact["id"] == contact_id:
                del contacts[i]
                print("–ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")
                return
        print("–ö–æ–Ω—Ç–∞–∫—Ç —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except ValueError:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID.")

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    print("\nüìû –¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫")
    print("1. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã")
    print("2. –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç")
    print("3. –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞")
    print("4. –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç")
    print("5. –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç")
    print("6. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏")
    print("7. –í—ã–π—Ç–∏ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
    choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-7): ")
    return choice

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    contacts = load_contacts()
    changed = False

    while True:
        choice = main_menu()
        match choice:
            case "1":
                show_all_contacts(contacts)
            case "2":
                create_contact(contacts)
                changed = True
            case "3":
                find_contact(contacts)
            case "4":
                edit_contact(contacts)
                changed = True
            case "5":
                delete_contact(contacts)
                changed = True
            case "6":
                save_contacts(contacts)
                print("–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.")
                break
            case "7":
                print("–í—ã—Ö–æ–¥ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.")
                break
            case _:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

if __name__ == "__main__":
    main()